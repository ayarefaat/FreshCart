import{W as c}from"./chunk-7Q3RJGOY.js";var a=class extends Error{};a.prototype.name="InvalidTokenError";function l(e){return decodeURIComponent(atob(e).replace(/(.)/g,(o,t)=>{let r=t.charCodeAt(0).toString(16).toUpperCase();return r.length<2&&(r="0"+r),"%"+r}))}function d(e){let o=e.replace(/-/g,"+").replace(/_/g,"/");switch(o.length%4){case 0:break;case 2:o+="==";break;case 3:o+="=";break;default:throw new Error("base64 string is not of the correct length")}try{return l(o)}catch{return atob(o)}}function i(e,o){if(typeof e!="string")throw new a("Invalid token specified: must be a string");o||(o={});let t=o.header===!0?0:1,r=e.split(".")[t];if(typeof r!="string")throw new a(`Invalid token specified: missing part #${t+1}`);let s;try{s=d(r)}catch(n){throw new a(`Invalid token specified: invalid base64 for part #${t+1} (${n.message})`)}try{return JSON.parse(s)}catch(n){throw new a(`Invalid token specified: invalid json for part #${t+1} (${n.message})`)}}var p=(()=>{class e{constructor(){}login(t){localStorage.setItem("token",`${t}`)}logout(){localStorage.removeItem("token"),localStorage.removeItem("userID"),localStorage.removeItem("userData")}getToken(){return localStorage.getItem("token")}saveUserData(t){let r=JSON.stringify(t);localStorage.setItem("userData",r)}saveDecodedUser(){localStorage.getItem("token")!==null&&(this.decodedInfo=i(this.getToken()),this.userID=this.decodedInfo.id,console.log(this.decodedInfo),localStorage.setItem("userID",this.decodedInfo.id))}getUserID(){return localStorage.getItem("userID")}getUserData(){return localStorage.getItem("userData")}static{this.\u0275fac=function(r){return new(r||e)}}static{this.\u0275prov=c({token:e,factory:e.\u0275fac,providedIn:"root"})}}return e})();export{p as a};
